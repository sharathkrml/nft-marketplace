import Head from "next/head";
import { ethers } from "ethers";
import { useEffect, useState } from "react";
import axios from "axios";
import Web3modal from "web3modal";
import { nftAddress, nftmarketAddress } from "../config";

import NFT from "../artifacts/contracts/NFT.sol/NFT.json";
import MARKET from "../artifacts/contracts/NFTMarket.sol/NFTMarket.json";
export default function Home() {
  const [nft, setNft] = useState([]);
  const [loadingState, setLoadingState] = useState("not-loaded");

  const loadNFTs = async () => {
    // in read operation,we dont need to know anything about provider,so use JsonRpcProvider
    const provider = new ethers.providers.JsonRpcProvider();
    const tokenContract = new ethers.Contract(nftAddress, NFT.abi, provider);
    const marketContract = new ethers.Contract(
      nftmarketAddress,
      MARKET.abi,
      provider
    );

    const data = await marketContract.fetchMarketItems();
    const items = await Promise.all(
      data.map(async (i) => {
        const tokenUri = await tokenContract.tokenURI(i.tokenId);
        const meta = await axios.get(tokenUri);
        let price = ethers.utils.formatUnits(i.price.toString(), "ether");
        let item = {
          price,
          tokenId: i.tokenId.toNumber(),
          seller: i.seller,
          owner: i.owner,
          image: meta.data.image,
          name: meta.data.name,
          description: meta.data.description,
        };
        return item;
      })
    );
    setNft(items);
    setLoadingState("loaded");
  };

  const buyNft = async (nft) => {
    const web3modal = new Web3modal();
    const connection = await web3modal.connect();
    const provider = new ethers.providers.Web3Provider(connection);
    const signer = provider.getSigner();
    const contract = new ethers.Contract(nftmarketAddress, MARKET.abi, signer);
    const price = ethers.utils.parseUnits(nft.price.toString(), "ether");
    const transaction = await contract.createMarketSale(
      nftAddress,
      nft.tokenId,
      { value: price }
    );
    await transaction.wait();
    // after finishing
    loadNFTs();
  };
  useEffect(() => {
    loadNFTs();
  }, []);

  if (loadingState === "loaded" && !nft.length)
    return <h1 className="px-20 py-10 text-3xl">No items in marketplace</h1>;
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      HOME
    </div>
  );
}
